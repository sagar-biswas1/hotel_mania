# docker-compose.yaml
# postgres
# pgadmin

version: "3.8"

services:
  postgres:
    image: postgres:13
    container_name: postgres
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "auth"]
      interval: 30s
      timeout: 30s
      retries: 3
 

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: on-failure
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
      - "5051:443"

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog2
    ports:
      - "1025:1025"
      - "8025:8025"
    volumes:
      - mailhog:/var/lib/mailhog

  redis-stack:
    image: redis/redis-stack:latest
    ports:
      - "6379:6379"
      - "8002:8001"
    volumes:
      - redis-stack:/var/lib/redis-stack
    environment:
      - REDIS_ARGS=--save 900 1

  rabbitmq:
    image: rabbitmq:3.8-management
    ports:
      - "5672:5672" # RabbitMQ main port
      - "15672:15672" # RabbitMQ management UI port
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
  mongodb:
    image: mongo
    container_name: mongodb
    restart: on-failure
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
  # auth-service:
  #   build:
  #     context: ./services/auth
  #   environment:
  #     DATABASE_URL: postgresql://postgres:postgres@postgres:5432/auth_db?schema=public
  #     JWT_SECRET: My_Secret_Key
  #     BASE_URL_AUTH: http://localhost:4003
  #     USER_SERVICE_URL: http://localhost:4000
  #     EMAIL_SERVICE_URL: http://localhost:4005
  #   depends_on:
  #     - postgres
  #   ports:
  #     - "4003:4003"
   
  # user-service:
  #   build:
  #     context: ./services/user
  #   environment:
  #     DATABASE_URL: postgresql://postgres:postgres@postgres:5432/user_db?schema=public
  #     JWT_SECRET: My_Secret_Key
  #     BASE_URL_USER: http://localhost:4000
  #     USER_SERVICE_URL: http://localhost:4000
  #     EMAIL_SERVICE_URL: http://localhost:4005
  #   depends_on:
  #     - postgres
  #   ports:
  #     - "4000:4000"
  
  # mongodb:
  #   image: mongo:latest
  #   container_name: mongodb
  #   restart: on-failure
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     - mongodb_data:/data/db
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: example
  #     MONGO_INITDB_REPLICA_SET_NAME: rs0
  #   command: "mongod --replSet rs0"  # Initialize the replica set
  #   healthcheck:
  #     test: ["CMD", "mongo", "--eval", "rs.status()"]
  #     interval: 30s
  #     timeout: 30s
  #     retries: 3


  # ------------------------------------------
networks:
  default:
    driver: bridge

volumes:
  postgres:
  mailhog:
  redis-stack:
  rabbitmq_data:
  kong_data:
  mongodb_data:
  auth-service:


