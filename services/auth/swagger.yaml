openapi: 3.0.3
info:
  title: hotel-mania - Auth Service API
  description: API for user authentication including registration, login, email validation, token verification, and user role management.
  termsOfService: http://swagger.io/terms/
  contact:
    email: mr.oshanbiswas@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
  
servers:
  - url: http://localhost:4003
    description: Local server
  - url: https://api-gateway-rust.vercel.app
    description: UAT server  
tags:
  - name: Auth
    description: Everything about auth

paths:
  /health:
    get:
      summary: check health
      tags:
        - Auth
      operationId: checkHealthOFAuthService
      responses:
        '200':
          description: checking health of auth
          content:
            application/json:
               schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Up

  /auth/register:
    post:
      summary: Register a new user
      tags: 
        - Auth
      description: Register a new user and send a confirmation email.
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                name:
                  type: string
      responses:
        '201':
          description: User registered with a confirmation email sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User created. Check your email for verification code
                  user:
                    $ref: '#/components/schemas/User'
                 
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                 errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          example: invalid_type
                        expected:
                          type: string
                          example: string
                        received:
                          type: string
                          example: undefined
                        path:
                          type: array
                          items:
                            type: string
                            example: name
                        message:
                          type: string
                          example: Required
        '500':
          description: Internal server error
          content:
            application/json:
               schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal server error
                
  /auth/login:
    post:
      summary: User login
      tags: 
        - Auth
      description: Authenticate user and return a JSON Web Token (JWT).
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Successful login with a JWT returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJjbHdybGMzcXEwMDAwZGczc25wMTNyMHlnIiwiZW1haWwiOiJGcmVkeV9CZW0
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                 errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          example: invalid_type
                        expected:
                          type: string
                          example: string
                        received:
                          type: string
                          example: undefined
                        path:
                          type: array
                          items:
                            type: string
                            example: name
                        message:
                          type: string
                          example: Required
        '500':
          description: Internal server error
          content:
            application/json:
               schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal server error
  /auth/verify-email:
    post:
      summary: Validate email
      tags: 
        - Auth
      description: Validate email with a validation code.
      operationId: validateEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                validationCode:
                  type: string
                  example: 123454
      responses:
        '200':
          description: Email successfully validated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string
                    example: Email verified successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                 errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          example: invalid_type
                        expected:
                          type: string
                          example: string
                        received:
                          type: string
                          example: undefined
                        path:
                          type: array
                          items:
                            type: string
                            example: name
                        message:
                          type: string
                          example: Required
        '404':
          description: not found
          content:
            application/json:
               schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User not found
        '500':
          description: Internal server error
          content:
            application/json:
               schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal server error
  /auth/verify-token:
    post:
      summary: Verify JWT token
      tags: 
        - Auth
      description: Verify JWT token and return user information.
      operationId: verifyToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accessToken:
                  type: string
      responses:
        '200':
          description: Authorized user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                 errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          example: invalid_type
                        expected:
                          type: string
                          example: string
                        received:
                          type: string
                          example: undefined
                        path:
                          type: array
                          items:
                            type: string
                            example: accessToken
                        message:
                          type: string
                          example: Required
                  
        
        '500':
          description: Internal server error
          content:
            application/json:
               schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal server error
  /auth/update-user-role/{id}:
    patch:
      summary: Update user role
      tags:
        - Auth
      security:
        - bearerAuth: []
      description: Update the role of a user. This route is admin-protected.
      operationId: updateUserRole
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  example: ADMIN
      responses:
        '200':
          description: User role updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User role updated to ADMIN
                  user:
                    $ref: '#/components/schemas/User'
                  
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                 errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          example: invalid_type
                        expected:
                          type: string
                          example: string
                        received:
                          type: string
                          example: undefined
                        path:
                          type: array
                          items:
                            type: string
                            example: accessToken
                        message:
                          type: string
                          example: Required
        '401':
          description: Unauthorized
          content:
            application/json:
               schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        '500':
          description: Internal server error
          content:
            application/json:
               schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal server error
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    User:
      type: object
      properties:    
        id:
         type: string
         example: clwrlc3qq0000dg3snp13r0yg
        email:
          type: string
          format: email
          example: Fredy_Beier@yahoo.com
        name:
          type: string
          example: oshan
        role:
          type: string
          example: User
        status:
          type: string
          example: PENDING
        verified:
          type: boolean
          example: false